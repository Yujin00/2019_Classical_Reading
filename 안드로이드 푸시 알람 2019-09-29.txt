안드로이드 푸시 알람 공부2019-09-29
1. 클라이언트를 다루기 위해 라이브러리를 프로젝트에 등록
Mainfest에 추가할 퍼미션들
<uses-permission android:name="android.permission.GET_ACCOUNTS" />

<uses-permission android:name="android.permission.WAKE_LOCK" />

<uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

<uses-permission android:name="android.permission.VIBRATE"/>
//push message구현에 필요한 퍼미션
<permission android:name="com.example.dsm_boxfox.permission.C2D_MESSAGE"
android:protectionLevel="signature" />
<uses-permission android:name="com.example.dsm_boxfox.permission.C2D_MESSAGE" />

2.Activity
<application ...>

<receiver
    android:name="com.google.android.gcm.GCMBroadcastReceiver"
    android:permission="com.google.android.c2dm.permission.SEND" >
    <intent-filter>
        <action android:name="com.google.android.c2dm.intent.RECEIVE" />
        <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
        <category android:name="자신 프로젝트의 패키지" />
    </intent-filter>
</receiver>
<service android:name=".GCMIntentService" />

</application>
//자신의 프로젝트 패키지를 category에 넣어야함
3.Mainactivity에 메소드 추가
public void registerGcm() {

    GCMRegistrar.checkDevice(this);
    GCMRegistrar.checkManifest(this);

    String regId = GCMRegistrar.getRegistrationId(this);

    if (regId.equals("")) {
        GCMRegistrar.register(this, "Sender ID");
        regId = GCMRegistrar.getRegistrationId(this);
        System.out.println("ID : "+regId);

    } else {
        Log.e("id", regId);
    }

}
//regID생성되어 있지 않으면 생성
//sender ID부분에 위에서 얻어온 sender ID를 넣어야 함
//MainActivitydml onCreate 메소드 안에서 위에 메소드 호출하기
4.GCMIntentService클래스 만들기
public class GCMIntentService extends GCMBaseIntentService {
 
    @Override
    protected void onError(Context arg0, String arg1) {}
 
    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
    @Override
    protected void onMessage(Context context, Intent intent) {
        String msg = intent.getStringExtra("msg");
        NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, new Intent(this, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT);
        Notification.Builder builder = new Notification.Builder(context)
                .setContentIntent(pendingIntent)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setContentTitle("DSM 알리미")
                .setContentText(msg)
                .setDefaults(Notification.DEFAULT_SOUND | Notification.DEFAULT_VIBRATE)
                .setTicker("DSM 알리미 - 소식 왔어요!")
                .setAutoCancel(true);
        Notification notification = builder.build();
        nm.notify(Calendar.getInstance().get(Calendar.MILLISECOND), notification);
    }
 
    @Override
    protected void onRegistered(Context context, final String reg_id) {
        //키가 등록됨
    }
 
    @Override
    protected void onUnregistered(Context arg0, String arg1) {
        //키가 제거됨
    }
}
//R.drawable.push 아이콘 부분은 Notification의 아이콘을 넣어주기
//"DSM 알리미"부분은 Notificaition이 출력되었을 때 미리보기
//System.currentTimeMillis()부분은 Notification이 출력될 시간
